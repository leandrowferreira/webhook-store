name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ~/.composer/cache/files
        key: dependencies-php-8.2-composer-${{ hashFiles('composer.json') }}

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Create SQLite database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Setup environment file
      run: |
        cp .env.example .env
        echo "DB_CONNECTION=sqlite" >> .env
        echo "DB_DATABASE=database/database.sqlite" >> .env

    - name: Generate application key
      run: php artisan key:generate --ansi

    - name: Run database migrations
      run: php artisan migrate --force

    - name: Clear cache
      run: |
        php artisan config:clear
        php artisan cache:clear
        php artisan view:clear

    - name: Create basic assets for testing
      run: |
        mkdir -p public/build/assets
        cat > public/build/manifest.json << 'EOF'
        {
          "resources/css/app.css": {
            "file": "assets/app.css",
            "isEntry": true,
            "src": "resources/css/app.css"
          },
          "resources/js/app.js": {
            "file": "assets/app.js",
            "isEntry": true,
            "src": "resources/js/app.js"
          }
        }
        EOF
        touch public/build/assets/app.css
        touch public/build/assets/app.js

    - name: Run tests
      run: ./vendor/bin/pest

    - name: Run code style check
      run: ./vendor/bin/pint --test
